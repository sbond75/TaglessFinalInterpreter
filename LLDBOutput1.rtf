{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf500
{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Regular;
}
{\colortbl;\red255\green255\blue255;\red255\green255\blue255;\red31\green31\blue36;\red65\green182\blue69;
}
{\*\expandedcolortbl;;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c12157\c12157\c14118;\csgenericrgb\c25500\c71400\c27000;
}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab642
\pard\tx642\pardeftab642\pardirnatural\partightenfactor0

\f0\b\fs26 \cf2 \cb3 val: 5
\f1\b0\fs24 \cf0 \

\f0\b\fs26 \cf2 str: (8 + (- (1 + 2)))
\f1\b0\fs24 \cf0 \

\f0\b\fs26 \cf2 tree: Node 'Add' [Node 'Lit' [Leaf '8'], Node 'Neg' [Node 'Add' [Node 'Lit' [Leaf '1'], Node 'Lit' [Leaf '2']]]]
\f1\b0\fs24 \cf0 \

\f0\b\fs26 \cf2 val: 224
\f1\b0\fs24 \cf0 \

\f0\b\fs26 \cf2 str: ((42 + (- 10)) * 7)
\f1\b0\fs24 \cf0 \

\f0\b\fs26 \cf2 tree: Node 'Mul' [Node 'Add' [Node 'Lit' [Leaf '42'], Node 'Neg' [Node 'Lit' [Leaf '10']]], Node 'Lit' [Leaf '7']]
\f1\b0\fs24 \cf0 \

\f0\b\fs26 \cf4 (lldb) \cf2 expr result1
\f1\b0\fs24 \cf0 \

\f2\fs26 \cf2 (Int) $R0 = 5
\f1\fs24 \cf0 \

\f0\b\fs26 \cf4 (lldb) \cf2 expr str 1
\f1\b0\fs24 \cf0 \

\f2\fs26 \cf2 (Int) $R2 = 1
\f1\fs24 \cf0 \

\f2\fs26 \cf2   Fix-it applied, fixed expression was: 
\f1\fs24 \cf0 \

\f2\fs26 \cf2     str; 1
\f1\fs24 \cf0 \

\f0\b\fs26 \cf4 (lldb) \cf2 expr str1
\f1\b0\fs24 \cf0 \

\f2\fs26 \cf2 (String) $R4 = "(8 + (- (1 + 2)))"
\f1\fs24 \cf0 \

\f0\b\fs26 \cf4 (lldb) \cf2 expr ExpSym
\f1\b0\fs24 \cf0 \

\f2\fs26 \cf2 error: <EXPR>:3:1: error: expected member name or constructor call after type name
\f1\fs24 \cf0 \

\f2\fs26 \cf2 ExpSym
\f1\fs24 \cf0 \

\f2\fs26 \cf2 ^
\f1\fs24 \cf0 \
\

\f2\fs26 \cf2 <EXPR>:3:1: note: use '.self' to reference the type object
\f1\fs24 \cf0 \

\f2\fs26 \cf2 ExpSym
\f1\fs24 \cf0 \

\f2\fs26 \cf2 ^
\f1\fs24 \cf0 \

\f2\fs26 \cf2       .self
\f1\fs24 \cf0 \
\

\f2\fs26 \cf2 error: <EXPR>:3:1: error: protocol 'ExpSym' can only be used as a generic constraint because it has Self or associated type requirements
\f1\fs24 \cf0 \

\f2\fs26 \cf2 ExpSym
\f1\fs24 \cf0 \

\f2\fs26 \cf2 ^
\f1\fs24 \cf0 \
\

\f0\b\fs26 \cf4 (lldb) \cf2 expr ExpSym.self
\f1\b0\fs24 \cf0 \

\f2\fs26 \cf2 error: <EXPR>:3:1: error: protocol 'ExpSym' can only be used as a generic constraint because it has Self or associated type requirements
\f1\fs24 \cf0 \

\f2\fs26 \cf2 ExpSym.self
\f1\fs24 \cf0 \

\f2\fs26 \cf2 ^
\f1\fs24 \cf0 \
\

\f0\b\fs26 \cf4 (lldb) \cf2 expr Exp.self
\f1\b0\fs24 \cf0 \

\f2\fs26 \cf2 (TaglessFinalInterpreter.Exp.Type) $R6 = TaglessFinalInterpreter.Exp
\f1\fs24 \cf0 \

\f0\b\fs26 \cf4 (lldb) \cf2 expr Exp.Lit.self
\f1\b0\fs24 \cf0 \

\f2\fs26 \cf2 ((Int) -> TaglessFinalInterpreter.Exp) $R8 = 0x00000001011f7620
\f1\fs24 \cf0 \

\f0\b\fs26 \cf4 (lldb) \cf2 expr tf1
\f1\b0\fs24 \cf0 \

\f2\fs26 \cf2 error: <EXPR>:3:1: error: generic parameter 'E' could not be inferred
\f1\fs24 \cf0 \

\f2\fs26 \cf2 tf1
\f1\fs24 \cf0 \

\f2\fs26 \cf2 ^
\f1\fs24 \cf0 \
\

\f0\b\fs26 \cf4 (lldb) \cf2 expr tf1<StringExpSym>
\f1\b0\fs24 \cf0 \

\f2\fs26 \cf2 error: <EXPR>:3:1: error: cannot explicitly specialize a generic function
\f1\fs24 \cf0 \

\f2\fs26 \cf2 tf1<StringExpSym>
\f1\fs24 \cf0 \

\f2\fs26 \cf2 ^
\f1\fs24 \cf0 \
\

\f2\fs26 \cf2 <EXPR>:3:4: note: while parsing this '<' as a type parameter bracket
\f1\fs24 \cf0 \

\f2\fs26 \cf2 tf1<StringExpSym>
\f1\fs24 \cf0 \

\f2\fs26 \cf2    ^
\f1\fs24 \cf0 \
\

\f0\b\fs26 \cf4 (lldb) \cf2 expr tf1<StringExpSym>.self
\f1\b0\fs24 \cf0 \

\f2\fs26 \cf2 error: <EXPR>:3:1: error: cannot explicitly specialize a generic function
\f1\fs24 \cf0 \

\f2\fs26 \cf2 tf1<StringExpSym>.self
\f1\fs24 \cf0 \

\f2\fs26 \cf2 ^
\f1\fs24 \cf0 \
\

\f2\fs26 \cf2 <EXPR>:3:4: note: while parsing this '<' as a type parameter bracket
\f1\fs24 \cf0 \

\f2\fs26 \cf2 tf1<StringExpSym>.self
\f1\fs24 \cf0 \

\f2\fs26 \cf2    ^
\f1\fs24 \cf0 \
\

\f0\b\fs26 \cf4 (lldb) \cf2 expr tf2
\f1\b0\fs24 \cf0 \

\f2\fs26 \cf2 (Int) $R10 = 5
\f1\fs24 \cf0 \

\f0\b\fs26 \cf4 (lldb) \cf2 expr ts2
\f1\b0\fs24 \cf0 \

\f2\fs26 \cf2 (String) $R12 = "(8 + (- (1 + 2)))"
\f1\fs24 \cf0 \

\f0\b\fs26 \cf2 Program ended with exit code: 9}